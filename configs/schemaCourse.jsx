import { boolean, integer, json, pgTable, serial, varchar } from "drizzle-orm/pg-core";

export const CourseList=pgTable('courseList',{
    id:serial('id').primaryKey(),
    courseId:varchar('courseId').notNull(),
    name:varchar('name').notNull(),
    category:varchar('category').notNull(),
    level:varchar('level').notNull(),
    includeVideo: varchar('includeVideo').notNull().default('Yes'),
    courseOutput:json('courseOutput').notNull(),
    createdBy:varchar('createdBy').notNull(),
    userName:varchar('username'),
    userProfileImage:varchar('userProfileImage'),
    makePublic: boolean('makePublic').notNull().default(false),
    courseBanner:varchar('courseBanner').default('/imagePlaceholder.jpg'),
    publish:boolean('publish').default(false)
})

export const Chapters = pgTable('chapters', {
    id: serial('id').primaryKey(),
    courseId: varchar('courseId').notNull(),
    chapterId: integer('chapterId').notNull(),
    content: json('content').notNull(),
    videoIds: json('videoIds').notNull() // Store video IDs as a JSON array
});


export const ProjectList = pgTable('projectList', {
    id: serial('id').primaryKey(),
    projectId: varchar('projectId').notNull(),
    name: varchar('name').notNull(), // Name of the project (e.g., "AKA Restaurant")
    description: varchar('description').notNull(), // A brief description of the project
    category: varchar('category').notNull(), // Category of the project (e.g., "Web Development")
    technologies: json('technologies').notNull(), // Technologies or frameworks used (e.g., ["Java", "Flutter"])
    noOfPages: integer('noOfPages').notNull(), // Number of pages in the project
    pageContent: json('pageContent').notNull(), // Page content details (e.g., [{pageName: "Home", content: "Details..."}])
    integrations: json('integrations').default(null), // Integrations like third-party APIs (e.g., ["Google Maps"])
    authentication: json('authentication').default(null), // Authentication details (e.g., { "requiresAuthentication": false, "provider": "" })
    keysRequired: json('keysRequired').default(null), // API keys needed for the project
    includedFile: varchar('includedFile').default(null), // URL of the user-uploaded file (e.g., "https://.../file.docx")
    assetsRequired: boolean('assetsRequired').notNull().default(false), // Indicates if assets like images or data are required
    assets: json('assets').default(null), // Details about required assets (e.g., [{name: "logo", url: "https://..." }])
    projectOutput: json('projectOutput').default(null), // Stores details generated by the AI
    makePublic: boolean('makePublic').notNull().default(false), // Indicates if the project is visible to others
    createdBy: varchar('createdBy').notNull(), // User ID of the creator
    userName: varchar('userName').default(null), // Username of the creator
    userProfileImage: varchar('userProfileImage').default(null) // Profile image URL of the creator
});
